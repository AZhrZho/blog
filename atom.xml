<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azhrzho.github.io/blog/</id>
    <title>AZ's Blog Blog</title>
    <updated>2023-10-09T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://azhrzho.github.io/blog/"/>
    <subtitle>AZ's Blog Blog</subtitle>
    <icon>https://azhrzho.github.io/blog/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[基于DDA和FFMPEG的高性能桌面流捕获]]></title>
        <id>https://azhrzho.github.io/blog/desktop-stream-capture</id>
        <link href="https://azhrzho.github.io/blog/desktop-stream-capture"/>
        <updated>2023-10-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本文介绍一种基于Windows桌面复制API和FFMPEG的高性能桌面流捕获方法，其特点在于屏幕捕获和视频编码全部在GPU上进行，与传统的基于GDI的方式相比，效率更高且不占用CPU资源。该方法可用于桌面录制、远程桌面软件等。]]></summary>
        <content type="html"><![CDATA[<p>本文介绍一种基于Windows桌面复制API和FFMPEG的高性能桌面流捕获方法，其特点在于屏幕捕获和视频编码全部在GPU上进行，与传统的基于GDI的方式相比，效率更高且不占用CPU资源。该方法可用于桌面录制、远程桌面软件等。</p><h1>Windows桌面复制API</h1><p>Windows桌面复制API是Windows8开始支持的一套新的API，提供对桌面映像的远程访问能力。该API直接在DXGI图面中接收桌面的更新（底层显示设备），因此性能极高。经测试，<strong>利用该API可实现200FPS以上的桌面图像捕获，作为对比，传统的GDI捕获最高只能达到30FPS。</strong></p><h1>FFMPEG编码器</h1><p>FFMPEG支持使用硬件编码器，NVDIA显卡可以使用<code>nvenc</code>，AMD显卡可以使用<code>amf</code>。本文中实现的关键在于如何将DXGI输出的数据<strong>直接送入硬件编码器，避免显存与内存间不必要的拷贝</strong>。</p><h1>核心实现</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="在ffmpeg中创建d3d11对象">在FFMPEG中创建D3D11对象<a href="#在ffmpeg中创建d3d11对象" class="hash-link" aria-label="Direct link to 在FFMPEG中创建D3D11对象" title="Direct link to 在FFMPEG中创建D3D11对象">​</a></h2><p>DXGI的桌面捕获依赖D3D11，为了能够将捕获到的数据直接交给FFMPEG的硬编码器处理，必须使用FFMPEG创建D3D11设备对象，而不能我们自己创建（因为不同D3D11对象的数据不能直接调用），代码如下（省略异常处理）：</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> ret </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    AVBufferRef</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> device_ref </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ret </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">av_hwdevice_ctx_create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">device_ref</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> AV_HWDEVICE_TYPE_D3D11VA</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ret </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">av_hwdevice_ctx_init</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">device_ref</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    AVHWDeviceContext</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> hw_device_ctx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">AVHWDeviceContext</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">device_ref</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    AVD3D11VADeviceContext</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> hw_d3d_ctx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">AVD3D11VADeviceContext</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">hw_device_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">hwctx</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ID3D11DeviceContext</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pD3dDeviceContext </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> hw_d3d_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">device_context</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ID3D11Device</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pD3dDevice </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> hw_d3d_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">device</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>pD3dDevice</code>和<code>pD3dDeviceContext</code>为获取到的D3D11的对象，将利用它们进行屏幕捕获。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="dxgi屏幕捕获">DXGI屏幕捕获<a href="#dxgi屏幕捕获" class="hash-link" aria-label="Direct link to DXGI屏幕捕获" title="Direct link to DXGI屏幕捕获">​</a></h2><p>获取到D3D对象后，进一步获取DXGI相关对象：</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    IDXGIDevice</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pDxgiDevice</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pD3dDevice</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">QueryInterface</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">IID_PPV_ARGS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">pDxgiDevice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    IDXGIAdapter</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pDxgiAdapter</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pDxgiDevice</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">GetParent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">IID_PPV_ARGS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">pDxgiAdapter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    UINT i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    IDXGIOutput</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pOutput</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    std</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">vector</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">IDXGIOutput</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> vOutputs</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pDxgiAdapter</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">EnumOutputs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">pOutput</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> DXGI_ERROR_NOT_FOUND</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        vOutputs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push_back</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pOutput</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    IDXGIOutput1</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pDxgiOutput1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    vOutputs</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">QueryInterface</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">IID_PPV_ARGS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">pDxgiOutput1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    IDXGIOutputDuplication</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pDxgiOutputDuplication</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pDxgiOutput1</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">DuplicateOutput</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pD3dDevice</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">pDxgiOutputDuplication</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    DXGI_OUTDUPL_DESC mDxgiOutDupDesc</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pDxgiOutputDuplication</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">GetDesc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">mDxgiOutDupDesc</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    std</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">cout </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> mDxgiOutDupDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ModeDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Width </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"x"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    std</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">cout </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> mDxgiOutDupDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ModeDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Height </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"@"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    std</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">cout </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> mDxgiOutDupDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ModeDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">RefreshRate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Numerator </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> mDxgiOutDupDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ModeDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">RefreshRate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Denominator </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Hz"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> std</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">endl</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>vOutputs</code>中存放的是所有显示器信息，初始化时用了<code>vOutputs[0]</code>，表示第一个显示器。<code>pDxgiOutputDuplication</code>对象可用于获取屏幕，通过调用<code>AcquireNextFrame</code>方法。该方法返回一个<code>IDXGIResource</code>对象，可通过下列代码从该Resource中获取到包含桌面图像数据的<code>ID3D112DTexture</code>对象：</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    ID3D11Texture2D</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pAcquiredDesktopImage</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pDxgiOutputDuplication</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">AcquireNextFrame</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">mFrameInfo</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">pDesktopRes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">SUCCEEDED</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pDesktopRes</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">QueryInterface</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">IID_PPV_ARGS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">pAcquiredDesktopImage</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pDesktopRes</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">Release</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>获取到的<code>pAcquiredDesktopImage</code>为D3D的二维纹理对象，内部的图片数据存在于显存中，格式为<code>BGRA</code>。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="创建ffmpeg硬件编码器">创建FFMPEG硬件编码器<a href="#创建ffmpeg硬件编码器" class="hash-link" aria-label="Direct link to 创建FFMPEG硬件编码器" title="Direct link to 创建FFMPEG硬件编码器">​</a></h2><p>FFMPEG编码器的默认实现是软件实现，编码时占用CPU资源。根据平台不同，可以创建对应的硬件编码器，并进行相应配置：</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 创建并配置硬件编码器</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> AVCodec</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> codec </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">avcodec_find_encoder_by_name</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"h264_nvenc"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">// NVDIA平台</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// const AVCodec* codec = avcodec_find_encoder_by_name("h264_amf");  // AMD平台</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    AVCodecContext</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> codec_ctx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">avcodec_alloc_context3</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">codec</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> TARGET_FPS </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">60</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    codec_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">width </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1920</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    codec_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">height </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1080</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    codec_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">pix_fmt </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AV_PIX_FMT_D3D11</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    codec_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">time_base </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AVRational</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> TARGET_FPS </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    codec_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">framerate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AVRational</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> TARGET_FPS</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    codec_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">sample_aspect_ratio </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AVRational</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    codec_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">gop_size </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    codec_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">max_b_frames </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>需要注意的是<code>pix_fmt</code>参数，此处应选择<code>AV_PIX_FMT_D3D11</code>，这样FFMPEG就会使用D3D11在GPU中创建帧缓存，而不是在内存中。这一步很重要，由于DDA采集到的帧是D3D资源，存在显存中，而底层硬件编码器的帧缓存也在显存中，如果FFMPEG的帧缓存分配在内存中，编码时就会产生 <code>显存-&gt;内存-&gt;显存</code>的拷贝，而内存和显存之间的拷贝消耗CPU资源，且会降低性能。而如果使用显存内帧缓存，则所有的拷贝操作都在显存内完成，则完全不会占用CPU资源，性能极高。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="创建桌面帧缓存和ffpmeg编码器帧缓存">创建桌面帧缓存和FFPMEG编码器帧缓存<a href="#创建桌面帧缓存和ffpmeg编码器帧缓存" class="hash-link" aria-label="Direct link to 创建桌面帧缓存和FFPMEG编码器帧缓存" title="Direct link to 创建桌面帧缓存和FFPMEG编码器帧缓存">​</a></h2><p>DDA有一个特性，当桌面不发生变化时捕获不到画面，也就是只有桌面变化才能获取到新的帧。而视频编码器要求每一帧连续输入，因此我们创建一个桌面帧缓存，当桌面不变时直接使用缓存的帧输入编码器。同样，我们在GPU中分配来避免内存和显存间的拷贝。</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    D3D11_TEXTURE2D_DESC resDesc</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ZeroMemory</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">resDesc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">sizeof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">D3D11_TEXTURE2D_DESC</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Width </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1920</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Height </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1080</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">MipLevels </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ArraySize </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Format </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> DXGI_FORMAT_B8G8R8A8_UNORM</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SampleDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Count </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Usage </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> D3D11_USAGE_DEFAULT</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">BindFlags </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> D3D11_BIND_RENDER_TARGET</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resDesc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CPUAccessFlags </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ID3D11Texture2D</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> pCaptureBuffer</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pD3dDevice</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">CreateTexture2D</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">resDesc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">pCaptureBuffer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接下来为FFMPEG分配帧缓存， 并打开编码器：</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    AVBufferRef</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> hw_frames_ref</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    AVHWFramesContext</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> frame_ctx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hw_frames_ref </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">av_hwframe_ctx_alloc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">device_ref</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    frame_ctx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">AVHWFramesContext</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hw_frames_ref</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    frame_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">format </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AV_PIX_FMT_D3D11</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    frame_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">sw_format </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AV_PIX_FMT_BGRA</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    frame_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">width </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1920</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    frame_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">height </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1080</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    frame_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">initial_pool_size </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ret </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">av_hwframe_ctx_init</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hw_frames_ref</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    codec_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">hw_frames_ctx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">av_buffer_ref</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hw_frames_ref</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">av_buffer_unref</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">hw_frames_ref</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ret </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">avcodec_open2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">codec_ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> codec</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="循环编码并写入文件流">循环编码并写入文件流<a href="#循环编码并写入文件流" class="hash-link" aria-label="Direct link to 循环编码并写入文件流" title="Direct link to 循环编码并写入文件流">​</a></h2><p>以下代码创建输出文件流、写入文件头、循环编码并写入文件、写入文件尾：</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int64_t</span><span class="token plain"> calc_duration </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">av_q2d</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">codec_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">time_base</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">av_q2d</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vst</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">time_base</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int64_t</span><span class="token plain"> frame_duration </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">av_q2d</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">codec_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">time_base</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1000000</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int64_t</span><span class="token plain"> last_frame_time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">av_gettime</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">frameCount </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> RECORD_PERIOD </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> TARGET_FPS</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        last_frame_time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">av_gettime</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        hr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pDxgiOutputDuplication</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">AcquireNextFrame</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">mFrameInfo</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">pDesktopRes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">SUCCEEDED</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            pDesktopRes</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">QueryInterface</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">IID_PPV_ARGS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">pAcquiredDesktopImage</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            pDesktopRes</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">Release</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            pD3dDeviceContext</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">CopyResource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pCaptureBuffer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pAcquiredDesktopImage</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            pAcquiredDesktopImage</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">Release</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            pDxgiOutputDuplication</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token function" style="color:#d73a49">ReleaseFrame</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AVFrame</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> hw_frame </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">av_frame_alloc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ret </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">av_hwframe_get_buffer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">codec_ctx</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">hw_frames_ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hw_frame</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ret </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> ret</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">hw_frame</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">hw_frames_ctx</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">AVERROR</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ENOMEM</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        hw_frame</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">uint8_t</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">pCaptureBuffer</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        hw_frame</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ret </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">avcodec_send_frame</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">codec_ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hw_frame</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ret </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> ret</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        std</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">cout </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"frameCount: "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> frameCount </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> std</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">endl</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AVPacket</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> packet </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">av_packet_alloc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ret </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">avcodec_receive_packet</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">codec_ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> packet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ret</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            packet</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">stream_index </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> vst </span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain"> index</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            packet</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">duration </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> calc_duration</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            packet</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">pts </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> frameCount </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> packet</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">duration</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            packet</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">dts </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> packet </span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain"> pts</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ret </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">av_interleaved_write_frame</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fmt_ctx_out</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> packet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">av_packet_unref</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">av_frame_free</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">hw_frame</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">av_packet_free</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">packet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        frameCount</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">auto</span><span class="token plain"> sleepTime </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> frame_duration </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">av_gettime</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> last_frame_time</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sleepTime </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">av_usleep</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">unsigned</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">sleepTime</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">av_write_trailer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fmt_ctx_out</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">avformat_free_context</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fmt_ctx_out</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>由于是简单Demo，这里的录制循环固定录制20秒。为保证编码速度和实际速度匹配，在编码过程中会计算每一帧的捕获及编码耗时，并在与帧率匹配的正确时间点进行下一帧的捕获和编码。其余FFMPEG相关函数说明此处无需赘述，读者可自行查阅官方文档。</p><p><img loading="lazy" alt="运行效果图.png" src="/blog/assets/images/figure-cd72b47df98023b486cc5c050162dc13.png" width="1500" height="679" class="img_ev3q"></p>]]></content>
        <author>
            <name>zhuoqiang.li</name>
            <uri>https://github.com/AZhrZho</uri>
        </author>
        <category label="c++" term="c++"/>
        <category label="windows" term="windows"/>
        <category label="ffmpeg" term="ffmpeg"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[C#与C++互操作技术概述]]></title>
        <id>https://azhrzho.github.io/blog/cs-cpp-interop</id>
        <link href="https://azhrzho.github.io/blog/cs-cpp-interop"/>
        <updated>2023-10-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[c#和c++是两种优秀的语言，在一些情况下需要实现二者之间的互操作性（Interop），即C#调用C++编写的代码，或C++调用C#编写的代码。本文将介绍常见的几种C#和C++之间的互操作技术，并讨论其优缺点。]]></summary>
        <content type="html"><![CDATA[<p>c#和c++是两种优秀的语言，在一些情况下需要实现二者之间的互操作性（Interop），即C#调用C++编写的代码，或C++调用C#编写的代码。本文将介绍常见的几种C#和C++之间的互操作技术，并讨论其优缺点。</p><h1>CSharp调用C++</h1><p>C#调用C、C++代码有三种常见技术，分别为<code>P/Invoke</code>、 <code>c++/clr</code>和 <code>COM组件</code>。下面将分别进行介绍。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用pinvoke">使用P/Invoke<a href="#使用pinvoke" class="hash-link" aria-label="Direct link to 使用P/Invoke" title="Direct link to 使用P/Invoke">​</a></h2><p>P/Invoke即Platform Invoke，平台调用技术，是C#方面的技术，允许开发者在C#代码中导入<strong>C标准导出</strong>的<strong>函数</strong>并进行调用。这意味着，如果想利用P/Invoke技术在C#中调用C++代码，则C++代码必须满足以下条件：</p><ol><li>必须是全局函数，不能包含在类中</li><li>必须使用标准C导出</li></ol><blockquote><p>c++中使用<code>extern "C" __declspec( dllexport )</code>创建标准C导出</p></blockquote><p>相应地，在C#代码中使用<code>[DllImport]</code>特性导入函数并使用。由于此类调用是从托管代码调用非托管代码，在C#导入时还需处理参数的封送（Marshaling）。具体而言，常见的参数封送规则如下：</p><ul><li>由于C++中有多种字符串表示法，若参数中包含字符串，需指定字符串类别（参数上使用<code>[MarshalAs]</code>特性，默认为C风格字符串）</li><li><code>int/float/bool</code>等基本值类型可直接对应。需要注意的是，c++中的<code>long</code>对应的是<code>int</code>，而<code>long long</code>才对应<code>long</code></li><li>所有指针，无论是单指针还是多重指针，全部对应为<code>IntPtr</code>。若需要在C#中进行指针操作，优先使用<code>System.Runtime.Interop</code>命名空间下的方法。若不能满足，则可以开启<code>unsafe</code>，直接将指针对应为指针类型并操作</li><li>参数中的结构体/共用体对应为C#中的<code>struct</code>，但对应<code>struct</code>中的字段分布需要手动指定，保证和c++中的一致</li></ul><p>P/Invoke是C#互操作中最常见的技术，其优势在于c/c++方面只需很少的修改或不用修改，就能在C#中直接导入，最常见的例子就是C#调用Windows API，例如<code>PostMessage</code>：</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// c++声明：</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BOOL </span><span class="token function" style="color:#d73a49">PostMessageW</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">in</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> optional</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> HWND   hWnd</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">in</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">           UINT   Msg</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">in</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">           WPARAM wParam</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">in</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">           LPARAM lParam</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// c# 导入</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token function" style="color:#d73a49">DllImport</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"user32.dll"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> EntryPoint </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"PostMessageW"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extern</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#00009f">bool</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">PostMessage</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">IntPtr</span><span class="token plain"> hWnd</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">uint</span><span class="token plain"> msg</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">IntPtr</span><span class="token plain"> wParam</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">IntPtr</span><span class="token plain"> lParam</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>但这种方式的缺点也很明显，由于需要处理跨越托管代码边界传参时的封送，性能相对要低一些。另外，如果原函数调用中涉及很多指针和结构体，C#方面的处理就会很繁琐。就拿上面的<code>PostMessage</code>举例，<code>wParam</code>和<code>lParam</code>都是指向结构体的指针，而结构体的类型是由<code>msg</code>参数确定的。这意味着如果需要发送的消息种类比较多，就需要把每种结构体严格写出来，在调用时还需要转为<code>IntPtr</code>。而实际在<code>PostMesssage</code>涉及的结构体的定义中很多还嵌套着其它结构体和指针，总之就是非常麻烦。</p><p>因此，P/Invoke适用于调用c/c++编写的参数和返回值类型较简单且固定的函数，比如<code>FindWindow</code>:</p><div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token attribute class-name">DllImport</span><span class="token attribute attribute-arguments punctuation" style="color:#393A34">(</span><span class="token attribute attribute-arguments string" style="color:#e3116c">"user32.dll"</span><span class="token attribute attribute-arguments punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extern</span><span class="token plain"> </span><span class="token return-type class-name">IntPtr</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">FindWindow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name keyword" style="color:#00009f">string</span><span class="token plain"> lpClassName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#00009f">string</span><span class="token plain"> lpWindowName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用cclr">使用C++/CLR<a href="#使用cclr" class="hash-link" aria-label="Direct link to 使用C++/CLR" title="Direct link to 使用C++/CLR">​</a></h2><p>c++/clr是VC的一种神奇的技术，它允许生成的dll中同时包含托管代码和非托管代码，也就是说，通过这种技术编写的dll，既可以被c++项目引用，又可以被c#项目引用，因此非常适合做c++和c#之间的互操作。WPF框架底层就大量使用了该技术，来实现框架与系统底层的交互。</p><p>这种方式的优点在于，开发者可以任意控制托管代码和非托管代码的边界，甚至可以在同一个函数中既调用原生c++的代码，又调用c#编写的程序集中的类和方法；既可以将程序集中的类和方法封装成c++的类和函数供c++调用，又可以将c++的类和函数封装成程序集供c#调用。而缺点在于，使用c++编写面向CLR代码需要使用一种特殊的语法，有额外的学习成本。</p><p>例如将Windows API中的<code>SendInput</code>函数封装为c#可用的程序集:</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> ref </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">NativeInput</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">private</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">NativeInput</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">~</span><span class="token function" style="color:#d73a49">NativeInput</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SendKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">array</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">WORD</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token operator" style="color:#393A34">^</span><span class="token plain"> key</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SendUnicode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">array</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">WORD</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token operator" style="color:#393A34">^</span><span class="token plain"> unicodes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>可以看到，使用c++定义CLR的类需要使用<code>ref class</code>，而CLR中的数组定义为<code>array&lt;Type&gt;^</code>，其它语法则与c++基本一致。方法的实现如下：</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token class-name">NativeInput</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">SendKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">array</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">WORD</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token operator" style="color:#393A34">^</span><span class="token plain"> keys</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> length </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> keys</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">Length </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    LPINPUT inputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> INPUT</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">ZeroMemory</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">inputs</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">sizeof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">INPUT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> keys</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">Length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inputs</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> INPUT_KEYBOARD</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inputs</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ki</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">wVk </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> keys</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> keys</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">Length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inputs</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> INPUT_KEYBOARD</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inputs</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ki</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">wVk </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> keys</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> keys</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">Length</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inputs</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ki</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dwFlags </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> KEYEVENTF_KEYUP</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">SendInput</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> inputs</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">sizeof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">INPUT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">delete</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">inputs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token class-name">NativeInput</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">SendUnicode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">array</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">WORD</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token operator" style="color:#393A34">^</span><span class="token plain"> unicodes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>相当于把纯c++的调用封装为c#的程序集，c#只需要引入dll，就可以直接调用<code>NativeInput.SendKey()</code>和<code>NativeInput.SendUnicode()</code>。而同样的功能如果使用<code>P/Invoke</code>，则需要额外声明代码中出现的所有常量和结构体。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="利用com组件">利用COM组件<a href="#利用com组件" class="hash-link" aria-label="Direct link to 利用COM组件" title="Direct link to 利用COM组件">​</a></h2><p>利用COM组件也可以实现c++和c#之间的互操作，而且可以实现双向互操作。因为C#和C++都可以编写COM组件，也都可以在程序中使用COM组件。由于COM组件编程较为繁琐，一般不使用这种方式。较为常见的例子是C#导入系统中已有的COM组件并使用，很少自己写COM组件并由C#调用。读者可自行了解并尝试。</p><h1>C++调用CSharp</h1><p>与C#调用C++相比，C++调用C#的技术不太常用，但也有一些场景：</p><ul><li>希望在C++中复用已有的C#编写的代码</li><li>一些功能使用C++编写比较麻烦，而C#很方便</li></ul><p>共有四种方法可供选择，分别为：<code>c++/clr</code>、<code>使用CLR API</code>、<code>COM组件</code>、<code>.NET AOT配合运行时链接</code>。其中，<code>使用CLR API</code>、<code>COM组件</code>这两种方法较为繁琐，不实用，感兴趣的读者可自行了解。<code>c++/clr</code>的方式上文已经提到过，不再赘述。本文将重点介绍<code>利用.NET AOT配合运行时链接</code>的方法实现c++调用c#代码。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="net7的native-aot简介">.NET7的Native AOT简介<a href="#net7的native-aot简介" class="hash-link" aria-label="Direct link to .NET7的Native AOT简介" title="Direct link to .NET7的Native AOT简介">​</a></h2><p>在传统认知中，C#程序的运行必须依赖.net运行时，无论是<code>.net framework</code>，还是新的<code>.net core</code>都是如此。究其原因，C#代码编译后的产物为IL（中间语言），必须在CLR（公共语言运行时）中由JIT（即时编译器）在运行时编译为本机代码执行。关键就在于C#程序是在运行时才被编译为最终可以直接运行的代码。</p><p>与JIT（运行时即时编译）相对的是AOT（预先编译）。AOT编译器能够在编译期就将中间语言编译为本机代码，因此AOT编译的产物与C语言编译链接的产物类似，可以直接在本地运行，不依赖CLR。</p><p>而C#语言终于.NET7中引入了AOT编译器，意味着能够编写出不依赖.net运行时的程序了，即使AOT编译存在一些限制。但它依然为其它语言调用c#的互操作提供了一种更简单的方法。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="c运行时动态链接">C++运行时动态链接<a href="#c运行时动态链接" class="hash-link" aria-label="Direct link to C++运行时动态链接" title="Direct link to C++运行时动态链接">​</a></h2><p>基于AOT的互操作，其基本原理是C#代码使用AOT编译，并使用标准C导出函数；C++就可以在运行时动态链接dll，获取到对应名称的函数并调用。此处需要区分运行时链接和动态链接。我们平时说的动态链接其实指的是编译时动态链接，为方便说明，下面列出所有的c++链接方式：</p><table><thead><tr><th>链接方式</th><th>编译时依赖</th><th>运行时依赖</th><th>链接执行</th></tr></thead><tbody><tr><td>静态链接</td><td>静态链接库和头文件</td><td>无</td><td>编译时</td></tr><tr><td>编译时动态链接</td><td>动态链接导入库和头文件</td><td>动态链接库</td><td>程序启动时</td></tr><tr><td>运行时动态链接</td><td>无</td><td>动态链接库</td><td>程序运行时的任意时刻</td></tr></tbody></table><p>由于C#经过AOT编译后只输出动态链接库文件，所以我们在C++中使用时需采取运行时动态链接的方式。具体实现可分为<code>Windows</code>和<code>Linux</code>:</p><ul><li>Windows下使用<a href="https://learn.microsoft.com/zh-cn/windows/win32/api/libloaderapi/nf-libloaderapi-loadlibraryw" target="_blank" rel="noopener noreferrer"><code>LoadLibrary</code></a>函数加载动态链接库，之后使用<a href="https://learn.microsoft.com/zh-cn/windows/win32/api/libloaderapi/nf-libloaderapi-getprocaddress" target="_blank" rel="noopener noreferrer"><code>GetProcAddress</code></a>函数获取符号名称对应的地址</li><li>Linux下对应函数为<code>dlopen</code>和<code>dlsym</code></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用-net-aot实现c调用c代码的示例">使用 .NET AOT实现C++调用C#代码的示例<a href="#使用-net-aot实现c调用c代码的示例" class="hash-link" aria-label="Direct link to 使用 .NET AOT实现C++调用C#代码的示例" title="Direct link to 使用 .NET AOT实现C++调用C#代码的示例">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="c项目建立与配置">C#项目建立与配置<a href="#c项目建立与配置" class="hash-link" aria-label="Direct link to C#项目建立与配置" title="Direct link to C#项目建立与配置">​</a></h3><blockquote><p>需要使用VS2022并安装.NET7 SDK</p></blockquote><p>第一步，新建一个C#类库项目，并在后续步骤中选择.NET7</p><p>第二步，在公共类中添加<strong>静态公共方法</strong>，并添加<code>[UnmanagedCallersOnly]</code>特性。以下示例代码实现一个可被c++调用的获取日期是星期几的函数：</p><div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token attribute class-name">UnmanagedCallersOnly</span><span class="token attribute attribute-arguments punctuation" style="color:#393A34">(</span><span class="token attribute attribute-arguments">EntryPoint </span><span class="token attribute attribute-arguments operator" style="color:#393A34">=</span><span class="token attribute attribute-arguments"> </span><span class="token attribute attribute-arguments string" style="color:#e3116c">"GetDayOfWeek"</span><span class="token attribute attribute-arguments punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetDayOfWeek</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">nint</span><span class="token plain"> lpDate</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">nint</span><span class="token plain"> lpDay</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name keyword" style="color:#00009f">var</span><span class="token plain"> dateStr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Marshal</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">PtrToStringUni</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lpDate</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">string</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsNullOrEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dateStr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name keyword" style="color:#00009f">var</span><span class="token plain"> dateTime </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> DateTime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Parse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dateStr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Marshal</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">StructureToPtr</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dateTime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DayOfWeek</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> lpDay</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">catch</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>该函数符合c风格api，使用<code>lpDate</code>指针传入日期字符串，使用<code>lpDay</code>指针传出星期几的整数，并使用返回值标志函数执行是否成功。需要注意的是，代码使用<code>Marshal.PtrToStringUni</code>方法从指针读入字符串，并使用<code>Marshal.StructureToPtr</code>方法将数据写入指针。如果开启不安全代码，可以直接在C#中使用指针，以上代码可改写为：</p><div class="language-cs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cs codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token attribute class-name">UnmanagedCallersOnly</span><span class="token attribute attribute-arguments punctuation" style="color:#393A34">(</span><span class="token attribute attribute-arguments">EntryPoint </span><span class="token attribute attribute-arguments operator" style="color:#393A34">=</span><span class="token attribute attribute-arguments"> </span><span class="token attribute attribute-arguments string" style="color:#e3116c">"GetDayOfWeek"</span><span class="token attribute attribute-arguments punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">unsafe</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetDayOfWeek</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">char</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> lpDate</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> lpDay</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">try</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name keyword" style="color:#00009f">var</span><span class="token plain"> dateStr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name keyword" style="color:#00009f">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lpDate</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">string</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsNullOrEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dateStr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name keyword" style="color:#00009f">var</span><span class="token plain"> dateTime </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> DateTime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Parse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dateStr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">lpDay </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">dateTime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DayOfWeek</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">catch</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这样写的好处是代码更清晰明了，但也增加了指针越界的风险。</p><p>第三步，在项目配置中添加以下内容：</p><div class="language-xml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-xml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">PublishAot</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">true</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">PublishAot</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>以上选项开启AOT编译。
接着进行发布，创建发布配置后，修改目标运行时为对应平台，保存后点击发布，在<code>bin\Release\net7.0\publish\win-x64</code>目录下可以看到编译输出的dll。</p><blockquote><p>.net7仅支持发布时AOT，.net8将支持编译时AOT</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="c调用示例">C++调用示例<a href="#c调用示例" class="hash-link" aria-label="Direct link to C++调用示例" title="Direct link to C++调用示例">​</a></h3><p>新建一个c++控制台项目，代码如下：</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">&lt;iostream&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">&lt;Windows.h&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 声明C#中定义的函数形式</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">typedef</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">HRESULT</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">GetDayOfWeakProc</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LPCWSTR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> LPDWORD</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 动态加载dll</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    HMODULE hAotDll </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">LoadLibrary</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">L</span><span class="token string" style="color:#e3116c">"AOTDemoLib.dll"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hAotDll </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 获取函数指针</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    GetDayOfWeakProc getDayOfWeak </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">GetDayOfWeakProc</span><span class="token punctuation" style="color:#393A34">)</span><span class="token function" style="color:#d73a49">GetProcAddress</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hAotDll</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"GetDayOfWeek"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">getDayOfWeak </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    DWORD iDayOfWeek </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 伪函数形式调用C#中导出的函数</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    HRESULT hr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getDayOfWeak</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">L</span><span class="token string" style="color:#e3116c">"2023/07/05"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">iDayOfWeek</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">FAILED</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> hr</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    std</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">cout </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"2023/07/05 is day"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> iDayOfWeek</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>在运行之前，需要把C#输出的dll复制到c++的输出目录中：</strong></p><blockquote><p>可以通过设置编译前脚本自动实现这一步</p></blockquote><p>然后运行，可以看到正确的输出结果，即2023年7月5日是周三。</p>]]></content>
        <author>
            <name>zhuoqiang.li</name>
            <uri>https://github.com/AZhrZho</uri>
        </author>
        <category label="csharp" term="csharp"/>
        <category label="c++" term="c++"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[友情链接]]></title>
        <id>https://azhrzho.github.io/blog/friends</id>
        <link href="https://azhrzho.github.io/blog/friends"/>
        <updated>2023-10-07T00:00:00.000Z</updated>
        <author>
            <name>Token团队</name>
            <uri>https://itoken.team</uri>
        </author>
        <author>
            <name>DGGua</name>
            <uri>https://github.com/DGGua</uri>
        </author>
        <author>
            <name>DismissedLight</name>
            <uri>https://github.com/Lightczx</uri>
        </author>
        <author>
            <name>FeliksLv</name>
            <uri>https://blog.kcqnly.club</uri>
        </author>
        <author>
            <name>Misaka</name>
            <uri>https://www.amghank.cn</uri>
        </author>
        <author>
            <name>Platelets</name>
            <uri>https://github.com/CodingPlatelets</uri>
        </author>
        <author>
            <name>Perinze</name>
            <uri>https://github.com/Perinze</uri>
        </author>
        <author>
            <name>Saicem</name>
            <uri>https://github.com/Saicem</uri>
        </author>
    </entry>
</feed>